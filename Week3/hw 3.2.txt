 Homework: HW 3.2
Making your blog accept posts

In this homework you will be enhancing the blog project to insert entries into the posts collection. After this, the blog will work. It will allow you to add blog posts with a title, body and tags and have it be added to the posts collection properly.

We have provided the code that creates users and allows you to login (the assignment from last week). To get started, please download hw3-2and3-3.tar or hw3-2and3-3.zip and unpack. You will be using these file for this homework and the HW 3.3.

The areas where you need to add code are marked with XXX. You need only touch the BlogPostDAO class. There are three locations for you to add code for this problem. Scan that file for XXX to see where to work. Here is an example of valid blog post:

> db.posts.find().pretty()
{
	"_id" : ObjectId("513d396da0ee6e58987bae74"),
	"title" : "Martians to use MongoDB",
	"author" : "andrew",
	"body" : "Representatives from the planet Mars announced today that the planet would adopt MongoDB as a planetary standard. Head Martian Flipblip said that MongoDB was the perfect tool to store the diversity of life that exists on Mars.",
	"permalink" : "martians_to_use_mongodb",
	"tags" : [
		"martians",
		"seti",
		"nosql",
		"worlddomination"
	],
	"comments" : [ ],
	"date" : ISODate("2013-03-11T01:54:53.692Z")
}

As a reminder, to run your blog you type

mvn compile exec:java -Dexec.mainClass=course.BlogController

Or, use an IDE to run it. To play with the blog you can navigate to the following URLs

http://localhost:8082/
http://localhost:8082/signup
http://localhost:8082/login
http://localhost:8082/newpost

You will be proving that it works by running our validation script as follows:

python validate.py

You need to run this in a separate terminal window while your blog is running and while the database is running. It makes connections to both to determine if your program works properly. Validate connects to localhost:8082 and expects that mongod is running on localhost on port 27017.

Read if you want to run your blog on non-standard port, different host or connected to a mongod on different server.

By popular demand, validate.py now takes some optional arguments that you can discover with the -h flag. These arguments will allow you to direct validate.py to make a connection to a web server at different port on a different host and connect to a mongod on a different host. You can also use a database name other than blog, a necessity if you are running on the free tier at MongoHW (for eg). I won't go into how these arguments work, as they are pretty self documenting. Note that to run the blog.py code to connect to a database outside of localhost (for example to a database at MongoHQ), you will need to make some global changes.

The python validator requires Python 2.7. The code is not 3.0 compliant.

Ok, once you get the blog posts working, validate.py will print out a validation code for HW 3.2. Please enter it below, exactly as shown with no spaces. 